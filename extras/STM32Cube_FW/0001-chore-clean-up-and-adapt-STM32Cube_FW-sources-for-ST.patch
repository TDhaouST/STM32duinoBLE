From 5c49396dbc2f435158b6d6a2d8b21a04902cadd5 Mon Sep 17 00:00:00 2001
From: TLIG Dhaou <dhaou.tlig-ext@st.com>
Date: Tue, 26 Jul 2022 14:06:34 +0200
Subject: [PATCH 1/4] chore: clean up and adapt STM32Cube_FW sources for
 STM32duino

Signed-off-by: TLIG Dhaou <dhaou.tlig-ext@st.com>
---
 src/utility/STM32Cube_FW/app_conf_default.h  | 427 +------------------
 src/utility/STM32Cube_FW/ble_bufsize.h       |  10 +
 src/utility/STM32Cube_FW/hw.h                |  27 +-
 src/utility/STM32Cube_FW/hw_ipcc.c           | 168 +-------
 src/utility/STM32Cube_FW/mbox_def.h          |  34 --
 src/utility/STM32Cube_FW/shci.c              |  39 +-
 src/utility/STM32Cube_FW/shci.h              |  53 +--
 src/utility/STM32Cube_FW/shci_tl.c           |  20 +-
 src/utility/STM32Cube_FW/stm32_wpan_common.h |  25 +-
 src/utility/STM32Cube_FW/stm_list.c          |  11 +-
 src/utility/STM32Cube_FW/stm_list.h          |   4 +-
 src/utility/STM32Cube_FW/tl.h                |  33 --
 src/utility/STM32Cube_FW/tl_mbox.c           | 143 +------
 13 files changed, 93 insertions(+), 901 deletions(-)

diff --git a/src/utility/STM32Cube_FW/app_conf_default.h b/src/utility/STM32Cube_FW/app_conf_default.h
index c63c66e..1d5e06a 100644
--- a/src/utility/STM32Cube_FW/app_conf_default.h
+++ b/src/utility/STM32Cube_FW/app_conf_default.h
@@ -1,4 +1,3 @@
-/* USER CODE BEGIN Header */
 /**
   ******************************************************************************
   * @file    app_conf.h
@@ -16,94 +15,40 @@
   *
   ******************************************************************************
   */
-/* USER CODE END Header */
 
 /* Define to prevent recursive inclusion -------------------------------------*/
 #ifndef APP_CONF_H
 #define APP_CONF_H
 
 #include "hw.h"
-#include "hw_conf.h"
-#include "hw_if.h"
 #include "ble_bufsize.h"
 
 /******************************************************************************
  * Application Config
  ******************************************************************************/
 
-/**
- * Define Secure Connections Support
- */
-#define CFG_SECURE_NOT_SUPPORTED              (0x00)
-#define CFG_SECURE_OPTIONAL                   (0x01)
-#define CFG_SECURE_MANDATORY                  (0x02)
-
-#define CFG_SC_SUPPORT                        CFG_SECURE_OPTIONAL
-
 /**
  * Define Keypress Notification Support
  */
-#define CFG_KEYPRESS_NOT_SUPPORTED            (0x00)
-#define CFG_KEYPRESS_SUPPORTED                (0x01)
-
-#define CFG_KEYPRESS_NOTIFICATION_SUPPORT     CFG_KEYPRESS_NOT_SUPPORTED
-
-/**
- * Numeric Comparison Answers
- */
-#define YES (0x01)
-#define NO  (0x00)
+/**< generic parameters ******************************************************/
+/* HCI related defines */
 
-/**
- * Device name configuration for Generic Access Service
- */
-#define CFG_GAP_DEVICE_NAME             "TEMPLATE"
-#define CFG_GAP_DEVICE_NAME_LENGTH      (8)
+#define ACI_HAL_SET_TX_POWER_LEVEL 0xFC0F
+#define ACI_WRITE_CONFIG_DATA_OPCODE 0xFC0C
+#define ACI_READ_CONFIG_DATA_OPCODE 0xFC0D
+#define MAX_HCI_ACL_PACKET_SIZE (sizeof(TL_PacketHeader_t) + 5 + 251)
+#define HCI_RESET 0x0C03
 
-/**
-*   Identity root key used to derive LTK and CSRK
-*/
-#define CFG_BLE_IRK     {0x12, 0x34, 0x56, 0x78, 0x9A, 0xBC, 0xDE, 0xF0, 0x12, 0x34, 0x56, 0x78, 0x9A, 0xBC, 0xDE, 0xF0}
-
-/**
-* Encryption root key used to derive LTK and CSRK
-*/
-#define CFG_BLE_ERK     {0xFE, 0xDC, 0xBA, 0x09, 0x87, 0x65, 0x43, 0x21, 0xFE, 0xDC, 0xBA, 0x09, 0x87, 0x65, 0x43, 0x21}
+#ifndef BLE_SHARED_MEM_BYTE_ORDER
+  #define BLE_SHARED_MEM_BYTE_ORDER  MSBFIRST
+#endif
+#define BLE_MODULE_SHARED_MEM_BUFFER_SIZE 128
 
 /**
- * SMPS supply
- * SMPS not used when Set to 0
- * SMPS used when Set to 1
+ * Define Tx Power
  */
-#define CFG_USE_SMPS    0
-
-/* USER CODE BEGIN Generic_Parameters */
-/* USER CODE END Generic_Parameters */
 
-/**< specific parameters */
-/*****************************************************/
-
-/* USER CODE BEGIN Specific_Parameters */
-#define PUSH_BUTTON_SW1_EXTI_IRQHandler                         EXTI4_IRQHandler
-
-/* USER CODE END Specific_Parameters */
-
-/******************************************************************************
- * Information Table
- *
-  * Version
-  * [0:3]   = Build - 0: Untracked - 15:Released - x: Tracked version
-  * [4:7]   = branch - 0: Mass Market - x: ...
-  * [8:15]  = Subversion
-  * [16:23] = Version minor
-  * [24:31] = Version major
-  *
- ******************************************************************************/
-#define CFG_FW_MAJOR_VERSION      (0)
-#define CFG_FW_MINOR_VERSION      (0)
-#define CFG_FW_SUBVERSION         (1)
-#define CFG_FW_BRANCH             (0)
-#define CFG_FW_BUILD              (0)
+#define CFG_TX_POWER                      (0x18) /* -0.15dBm */
 
 /******************************************************************************
  * BLE Stack
@@ -152,13 +97,15 @@
  * Prepare Write List size in terms of number of packet
  * This parameter is ignored by the CPU2 when CFG_BLE_OPTIONS has SHCI_C2_BLE_INIT_OPTIONS_LL_ONLY flag set
  */
-#define CFG_BLE_PREPARE_WRITE_LIST_SIZE         BLE_PREP_WRITE_X_ATT(CFG_BLE_MAX_ATT_MTU)
+// #define CFG_BLE_PREPARE_WRITE_LIST_SIZE         BLE_PREP_WRITE_X_ATT(CFG_BLE_MAX_ATT_MTU)
+#define CFG_BLE_PREPARE_WRITE_LIST_SIZE         (0x3A)
 
 /**
  * Number of allocated memory blocks
  * This parameter is overwritten by the CPU2 with an hardcoded optimal value when the parameter CFG_BLE_OPTIONS has SHCI_C2_BLE_INIT_OPTIONS_LL_ONLY flag set
  */
-#define CFG_BLE_MBLOCK_COUNT            (BLE_MBLOCKS_CALC(CFG_BLE_PREPARE_WRITE_LIST_SIZE, CFG_BLE_MAX_ATT_MTU, CFG_BLE_NUM_LINK))
+// #define CFG_BLE_MBLOCK_COUNT            (BLE_MBLOCKS_CALC(CFG_BLE_PREPARE_WRITE_LIST_SIZE, CFG_BLE_MAX_ATT_MTU, CFG_BLE_NUM_LINK))
+#define CFG_BLE_MBLOCK_COUNT              (0x79)
 
 /**
  * Enable or disable the Extended Packet length feature. Valid values are 0 or 1.
@@ -241,7 +188,7 @@
  *          0: LE Power Class 2-3
  * other bits: reserved (shall be set to 0)
  */
-#define CFG_BLE_OPTIONS  (SHCI_C2_BLE_INIT_OPTIONS_LL_HOST | SHCI_C2_BLE_INIT_OPTIONS_WITH_SVC_CHANGE_DESC | SHCI_C2_BLE_INIT_OPTIONS_DEVICE_NAME_RW | SHCI_C2_BLE_INIT_OPTIONS_EXT_ADV | SHCI_C2_BLE_INIT_OPTIONS_CS_ALGO2 | SHCI_C2_BLE_INIT_OPTIONS_POWER_CLASS_2_3)
+#define CFG_BLE_OPTIONS  (SHCI_C2_BLE_INIT_OPTIONS_LL_ONLY)
 
 #define CFG_BLE_MAX_COC_INITIATOR_NBR   (32)
 
@@ -290,341 +237,5 @@
   */
 
 #define CFG_BLE_RX_PATH_COMPENS    (0)
-
-/******************************************************************************
- * Transport Layer
- ******************************************************************************/
-/**
- * Queue length of BLE Event
- * This parameter defines the number of asynchronous events that can be stored in the HCI layer before
- * being reported to the application. When a command is sent to the BLE core coprocessor, the HCI layer
- * is waiting for the event with the Num_HCI_Command_Packets set to 1. The receive queue shall be large
- * enough to store all asynchronous events received in between.
- * When CFG_TLBLE_MOST_EVENT_PAYLOAD_SIZE is set to 27, this allow to store three 255 bytes long asynchronous events
- * between the HCI command and its event.
- * This parameter depends on the value given to CFG_TLBLE_MOST_EVENT_PAYLOAD_SIZE. When the queue size is to small,
- * the system may hang if the queue is full with asynchronous events and the HCI layer is still waiting
- * for a CC/CS event, In that case, the notification TL_BLE_HCI_ToNot() is called to indicate
- * to the application a HCI command did not receive its command event within 30s (Default HCI Timeout).
- */
-#define CFG_TLBLE_EVT_QUEUE_LENGTH 5
-/**
- * This parameter should be set to fit most events received by the HCI layer. It defines the buffer size of each element
- * allocated in the queue of received events and can be used to optimize the amount of RAM allocated by the Memory Manager.
- * It should not exceed 255 which is the maximum HCI packet payload size (a greater value is a lost of memory as it will
- * never be used)
- * It shall be at least 4 to receive the command status event in one frame.
- * The default value is set to 27 to allow receiving an event of MTU size in a single buffer. This value maybe reduced
- * further depending on the application.
- */
-#define CFG_TLBLE_MOST_EVENT_PAYLOAD_SIZE 255   /**< Set to 255 with the memory manager and the mailbox */
-
-#define TL_BLE_EVENT_FRAME_SIZE ( TL_EVT_HDR_SIZE + CFG_TLBLE_MOST_EVENT_PAYLOAD_SIZE )
-/******************************************************************************
- * UART interfaces
- ******************************************************************************/
-
-/**
- * Select UART interfaces
- */
-#define CFG_UART_GUI            hw_uart1
-#define CFG_DEBUG_TRACE_UART    0
-/******************************************************************************
- * USB interface
- ******************************************************************************/
-
-/**
- * Enable/Disable USB interface
- */
-#define CFG_USB_INTERFACE_ENABLE    0
-
-/******************************************************************************
- * IPCC interface
- ******************************************************************************/
-
-/**
- * The IPCC is dedicated to the communication between the CPU2 and the CPU1
- * and shall not be modified by the application
- * The two following definitions shall not be modified
- */
-#define HAL_IPCC_TX_IRQHandler(...)  HW_IPCC_Tx_Handler( )
-#define HAL_IPCC_RX_IRQHandler(...)  HW_IPCC_Rx_Handler( )
-
-/******************************************************************************
- * Low Power
- ******************************************************************************/
-/**
- *  When set to 1, the low power mode is enable
- *  When set to 0, the device stays in RUN mode
- */
-#define CFG_LPM_SUPPORTED    1
-
-/******************************************************************************
- * RTC interface
- ******************************************************************************/
-#define HAL_RTCEx_WakeUpTimerIRQHandler(...)  HW_TS_RTC_Wakeup_Handler( )
-
-/******************************************************************************
- * Timer Server
- ******************************************************************************/
-/**
- *  CFG_RTC_WUCKSEL_DIVIDER:  This sets the RTCCLK divider to the wakeup timer.
- *  The lower is the value, the better is the power consumption and the accuracy of the timerserver
- *  The higher is the value, the finest is the granularity
- *
- *  CFG_RTC_ASYNCH_PRESCALER: This sets the asynchronous prescaler of the RTC. It should as high as possible ( to output
- *  clock as low as possible) but the output clock should be equal or higher frequency compare to the clock feeding
- *  the wakeup timer. A lower clock speed would impact the accuracy of the timer server.
- *
- *  CFG_RTC_SYNCH_PRESCALER: This sets the synchronous prescaler of the RTC.
- *  When the 1Hz calendar clock is required, it shall be sets according to other settings
- *  When the 1Hz calendar clock is not needed, CFG_RTC_SYNCH_PRESCALER should be set to 0x7FFF (MAX VALUE)
- *
- *  CFG_RTCCLK_DIVIDER_CONF:
- *  Shall be set to either 0,2,4,8,16
- *  When set to either 2,4,8,16, the 1Hhz calendar is supported
- *  When set to 0, the user sets its own configuration
- *
- *  The following settings are computed with LSI as input to the RTC
- */
-
-#define CFG_RTCCLK_DIVIDER_CONF 0
-
-#if (CFG_RTCCLK_DIVIDER_CONF == 0)
-/**
- * Custom configuration
- * It does not support 1Hz calendar
- * It divides the RTC CLK by 16
- */
-
-#define CFG_RTCCLK_DIV            (16)
-#define CFG_RTC_WUCKSEL_DIVIDER   (0)
-#define CFG_RTC_ASYNCH_PRESCALER  (0x0F)
-#define CFG_RTC_SYNCH_PRESCALER   (0x7FFF)
-
-#else
-
-#if (CFG_RTCCLK_DIVIDER_CONF == 2)
-/**
- * It divides the RTC CLK by 2
- */
-#define CFG_RTC_WUCKSEL_DIVIDER (3)
-#endif
-
-#if (CFG_RTCCLK_DIVIDER_CONF == 4)
-/**
- * It divides the RTC CLK by 4
- */
-#define CFG_RTC_WUCKSEL_DIVIDER (2)
-#endif
-
-#if (CFG_RTCCLK_DIVIDER_CONF == 8)
-/**
- * It divides the RTC CLK by 8
- */
-#define CFG_RTC_WUCKSEL_DIVIDER (1)
-#endif
-
-#if (CFG_RTCCLK_DIVIDER_CONF == 16)
-/**
- * It divides the RTC CLK by 16
- */
-#define CFG_RTC_WUCKSEL_DIVIDER (0)
-#endif
-
-#define CFG_RTCCLK_DIV              CFG_RTCCLK_DIVIDER_CONF
-#define CFG_RTC_ASYNCH_PRESCALER    (CFG_RTCCLK_DIV - 1)
-#define CFG_RTC_SYNCH_PRESCALER     (DIVR( LSE_VALUE, (CFG_RTC_ASYNCH_PRESCALER+1) ) - 1 )
-
-#endif
-
-/** tick timer values */
-#define CFG_TS_TICK_VAL           DIVR( (CFG_RTCCLK_DIV * 1000000), LSE_VALUE )
-#define CFG_TS_TICK_VAL_PS        DIVR( ((uint64_t)CFG_RTCCLK_DIV * 1e12), (uint64_t)LSE_VALUE )
-
-typedef enum
-{
-  CFG_TIM_PROC_ID_ISR,
-  /* USER CODE BEGIN CFG_TimProcID_t */
-
-  /* USER CODE END CFG_TimProcID_t */
-} CFG_TimProcID_t;
-
-/******************************************************************************
- * Debug
- ******************************************************************************/
-/**
- * When set, this resets some hw resources to set the device in the same state than the power up
- * The FW resets only register that may prevent the FW to run properly
- *
- * This shall be set to 0 in a final product
- *
- */
-#define CFG_HW_RESET_BY_FW         1
-
-/**
- * keep debugger enabled while in any low power mode when set to 1
- * should be set to 0 in production
- */
-#define CFG_DEBUGGER_SUPPORTED    0
-
-/**
- * When set to 1, the traces are enabled in the BLE services
- */
-#define CFG_DEBUG_BLE_TRACE     0
-
-/**
- * Enable or Disable traces in application
- */
-#define CFG_DEBUG_APP_TRACE     0
-
-#if (CFG_DEBUG_APP_TRACE != 0)
-#define APP_DBG_MSG                 PRINT_MESG_DBG
-#else
-#define APP_DBG_MSG                 PRINT_NO_MESG
-#endif
-
-#if ( (CFG_DEBUG_BLE_TRACE != 0) || (CFG_DEBUG_APP_TRACE != 0) )
-#define CFG_DEBUG_TRACE             1
-#endif
-
-#if (CFG_DEBUG_TRACE != 0)
-#undef CFG_LPM_SUPPORTED
-#undef CFG_DEBUGGER_SUPPORTED
-#define CFG_LPM_SUPPORTED           0
-#define CFG_DEBUGGER_SUPPORTED      1
-#endif
-
-/**
- * When CFG_DEBUG_TRACE_FULL is set to 1, the trace are output with the API name, the file name and the line number
- * When CFG_DEBUG_TRACE_LIGHT is set to 1, only the debug message is output
- *
- * When both are set to 0, no trace are output
- * When both are set to 1,  CFG_DEBUG_TRACE_FULL is selected
- */
-#define CFG_DEBUG_TRACE_LIGHT     0
-#define CFG_DEBUG_TRACE_FULL      0
-
-#if (( CFG_DEBUG_TRACE != 0 ) && ( CFG_DEBUG_TRACE_LIGHT == 0 ) && (CFG_DEBUG_TRACE_FULL == 0))
-#undef CFG_DEBUG_TRACE_FULL
-#undef CFG_DEBUG_TRACE_LIGHT
-#define CFG_DEBUG_TRACE_FULL      0
-#define CFG_DEBUG_TRACE_LIGHT     1
-#endif
-
-#if ( CFG_DEBUG_TRACE == 0 )
-#undef CFG_DEBUG_TRACE_FULL
-#undef CFG_DEBUG_TRACE_LIGHT
-#define CFG_DEBUG_TRACE_FULL      0
-#define CFG_DEBUG_TRACE_LIGHT     0
-#endif
-
-/**
- * When not set, the traces is looping on sending the trace over UART
- */
-#define DBG_TRACE_USE_CIRCULAR_QUEUE 1
-
-/**
- * max buffer Size to queue data traces and max data trace allowed.
- * Only Used if DBG_TRACE_USE_CIRCULAR_QUEUE is defined
- */
-#define DBG_TRACE_MSG_QUEUE_SIZE 4096
-#define MAX_DBG_TRACE_MSG_SIZE   1024
-
-/* USER CODE BEGIN Defines */
-#define CFG_LED_SUPPORTED         1
-#define CFG_BUTTON_SUPPORTED      1
-
-#define PUSH_BUTTON_SW1_EXTI_IRQHandler     EXTI4_IRQHandler
-#define PUSH_BUTTON_SW2_EXTI_IRQHandler     EXTI0_IRQHandler
-#define PUSH_BUTTON_SW3_EXTI_IRQHandler     EXTI1_IRQHandler
-/* USER CODE END Defines */
-
-/******************************************************************************
- * Scheduler
- ******************************************************************************/
-
-/**
- * These are the lists of task id registered to the scheduler
- * Each task id shall be in the range [0:31]
- * This mechanism allows to implement a generic code in the API TL_BLE_HCI_StatusNot() to comply with
- * the requirement that a HCI/ACI command shall never be sent if there is already one pending
- */
-
-/**< Add in that list all tasks that may send a ACI/HCI command */
-typedef enum
-{
-  CFG_TASK_BLE_HCI_CMD_ID,
-  CFG_TASK_SYS_HCI_CMD_ID,
-  CFG_TASK_HCI_ACL_DATA_ID,
-  CFG_TASK_SYS_LOCAL_CMD_ID,
-  CFG_TASK_TX_TO_HOST_ID,
-  /* USER CODE BEGIN CFG_Task_Id_With_HCI_Cmd_t */
-  CFG_TASK_SW1_BUTTON_PUSHED_ID,
-  CFG_TASK_SW2_BUTTON_PUSHED_ID,
-  CFG_TASK_SW3_BUTTON_PUSHED_ID,
-  /* USER CODE END CFG_Task_Id_With_HCI_Cmd_t */
-  CFG_LAST_TASK_ID_WITH_HCICMD,                                               /**< Shall be LAST in the list */
-} CFG_Task_Id_With_HCI_Cmd_t;
-
-/**< Add in that list all tasks that never send a ACI/HCI command */
-typedef enum
-{
-  CFG_FIRST_TASK_ID_WITH_NO_HCICMD = CFG_LAST_TASK_ID_WITH_HCICMD - 1,        /**< Shall be FIRST in the list */
-  CFG_TASK_SYSTEM_HCI_ASYNCH_EVT_ID,
-  /* USER CODE BEGIN CFG_Task_Id_With_NO_HCI_Cmd_t */
-
-  /* USER CODE END CFG_Task_Id_With_NO_HCI_Cmd_t */
-  CFG_LAST_TASK_ID_WITH_NO_HCICMD                                            /**< Shall be LAST in the list */
-} CFG_Task_Id_With_NO_HCI_Cmd_t;
-
-#define CFG_TASK_NBR    CFG_LAST_TASK_ID_WITH_NO_HCICMD
-
-/**
- * This is the list of priority required by the application
- * Each Id shall be in the range 0..31
- */
-typedef enum
-{
-  CFG_SCH_PRIO_0,
-  /* USER CODE BEGIN CFG_SCH_Prio_Id_t */
-
-  /* USER CODE END CFG_SCH_Prio_Id_t */
-} CFG_SCH_Prio_Id_t;
-
-/**
- * This is a bit mapping over 32bits listing all events id supported in the application
- */
-typedef enum
-{
-  CFG_IDLEEVT_SYSTEM_HCI_CMD_EVT_RSP_ID,
-  /* USER CODE BEGIN CFG_IdleEvt_Id_t */
-
-  /* USER CODE END CFG_IdleEvt_Id_t */
-} CFG_IdleEvt_Id_t;
-
-/******************************************************************************
- * LOW POWER
- ******************************************************************************/
-/**
- * Supported requester to the MCU Low Power Manager - can be increased up  to 32
- * It list a bit mapping of all user of the Low Power Manager
- */
-typedef enum
-{
-  CFG_LPM_APP,
-  CFG_LPM_APP_BLE,
-  /* USER CODE BEGIN CFG_LPM_Id_t */
-
-  /* USER CODE END CFG_LPM_Id_t */
-} CFG_LPM_Id_t;
-
-/******************************************************************************
- * OTP manager
- ******************************************************************************/
-#define CFG_OTP_BASE_ADDRESS    OTP_AREA_BASE
-
-#define CFG_OTP_END_ADRESS      OTP_AREA_END_ADDR
-
-#endif /*APP_CONF_H */
+ #endif /*APP_CONF_H */
 
diff --git a/src/utility/STM32Cube_FW/ble_bufsize.h b/src/utility/STM32Cube_FW/ble_bufsize.h
index 0f0f419..021d9e4 100644
--- a/src/utility/STM32Cube_FW/ble_bufsize.h
+++ b/src/utility/STM32Cube_FW/ble_bufsize.h
@@ -75,17 +75,27 @@
           ((pw) + MAX(BLE_MEM_BLOCK_X_MTU(mtu, n_link), \
                       BLE_MBLOCKS_SECURE_CONNECTIONS))
 
+/*
+ * BLE_DEFAULT_MBLOCKS_COUNT: default memory blocks count
+ */
+#define BLE_DEFAULT_MBLOCKS_COUNT(n_link) \
+          BLE_MBLOCKS_CALC(BLE_DEFAULT_PREP_WRITE_LIST_SIZE, \
+                           BLE_DEFAULT_MAX_ATT_MTU, n_link)
+
 /*
  * BLE_FIXED_BUFFER_SIZE_BYTES:
  * A part of the RAM, is dinamically allocated by initilizing all the pointers
+ * A part of the RAM, is dynamically allocated by initializing all the pointers
  * defined in a global context variable "mem_alloc_ctx_p".
  * This initialization is made in the Dynamic_allocator functions, which 
  * assing a portion of RAM given by the external application to the above
+ * assign a portion of RAM given by the external application to the above
  * mentioned "global pointers".
  *
  * The size of this Dynamic RAM is made of 2 main components: 
  * - a part that is parameters-dependent (num of links, GATT buffers, ...),
  *   and which value is explicited by the following macro;
+ *   and which value is defined by the following macro;
  * - a part, that may be considered "fixed", i.e. independent from the above
  *   mentioned parameters.
 */
diff --git a/src/utility/STM32Cube_FW/hw.h b/src/utility/STM32Cube_FW/hw.h
index 503fa2c..ca4204f 100644
--- a/src/utility/STM32Cube_FW/hw.h
+++ b/src/utility/STM32Cube_FW/hw.h
@@ -26,6 +26,15 @@ extern "C" {
 #endif
 
   /* Includes ------------------------------------------------------------------*/
+#include "stm32_def.h"
+#include "stm32wbxx_ll_bus.h"
+#include "stm32wbxx_ll_exti.h"
+#include "stm32wbxx_ll_system.h"
+#include "stm32wbxx_ll_rcc.h"
+#include "stm32wbxx_ll_ipcc.h"
+#include "stm32wbxx_ll_cortex.h"
+#include "stm32wbxx_ll_utils.h"
+#include "stm32wbxx_ll_pwr.h"
 
   /******************************************************************************
    * HW IPCC
@@ -79,24 +88,6 @@ extern "C" {
   
   void HW_IPCC_TRACES_Init( void );
   void HW_IPCC_TRACES_EvtNot( void );
-
-  void HW_IPCC_MAC_802_15_4_Init( void );
-  void HW_IPCC_MAC_802_15_4_SendCmd( void );
-  void HW_IPCC_MAC_802_15_4_SendAck( void );
-  void HW_IPCC_MAC_802_15_4_CmdEvtNot( void );
-  void HW_IPCC_MAC_802_15_4_EvtNot( void );
-
-  void HW_IPCC_ZIGBEE_Init( void );
-
-  void HW_IPCC_ZIGBEE_SendM4RequestToM0(void); /* M4 Request to M0 */
-  void HW_IPCC_ZIGBEE_RecvAppliAckFromM0(void); /* Request ACK from M0 */
-
-  void HW_IPCC_ZIGBEE_RecvM0NotifyToM4(void); /* M0 Notify to M4 */
-  void HW_IPCC_ZIGBEE_SendM4AckToM0Notify(void); /* Notify ACK from M4 */
-  void HW_IPCC_ZIGBEE_RecvM0RequestToM4(void); /* M0 Request to M4 */
-  void HW_IPCC_ZIGBEE_SendM4AckToM0Request(void); /* Request ACK from M4 */
-
-
 #ifdef __cplusplus
 }
 #endif
diff --git a/src/utility/STM32Cube_FW/hw_ipcc.c b/src/utility/STM32Cube_FW/hw_ipcc.c
index fd620b8..425a4bc 100644
--- a/src/utility/STM32Cube_FW/hw_ipcc.c
+++ b/src/utility/STM32Cube_FW/hw_ipcc.c
@@ -18,8 +18,9 @@
   */
 /* USER CODE END Header */
 
+#if defined(STM32WBxx)
 /* Includes ------------------------------------------------------------------*/
-#include "app_common.h"
+#include "hw.h"
 #include "mbox_def.h"
 
 /* Global variables ---------------------------------------------------------*/
@@ -56,34 +57,17 @@ static void HW_IPCC_LLD_BLE_ReceiveRspHandler( void );
 static void HW_IPCC_LLD_BLE_ReceiveM0CmdHandler( void );
 #endif
 
-#ifdef MAC_802_15_4_WB
-static void HW_IPCC_MAC_802_15_4_CmdEvtHandler( void );
-static void HW_IPCC_MAC_802_15_4_NotEvtHandler( void );
-#endif
-
-#ifdef ZIGBEE_WB
-static void HW_IPCC_ZIGBEE_CmdEvtHandler( void );
-static void HW_IPCC_ZIGBEE_StackNotifEvtHandler( void );
-static void HW_IPCC_ZIGBEE_StackM0RequestHandler( void );
-#endif
-
 /* Public function definition -----------------------------------------------*/
 
 /******************************************************************************
  * INTERRUPT HANDLER
  ******************************************************************************/
-void HW_IPCC_Rx_Handler( void )
+void IPCC_C1_RX_IRQHandler(void)
 {
   if (HW_IPCC_RX_PENDING( HW_IPCC_SYSTEM_EVENT_CHANNEL ))
   {
       HW_IPCC_SYS_EvtHandler();
   }
-#ifdef MAC_802_15_4_WB
-  else if (HW_IPCC_RX_PENDING( HW_IPCC_MAC_802_15_4_NOTIFICATION_ACK_CHANNEL ))
-  {
-    HW_IPCC_MAC_802_15_4_NotEvtHandler();
-  }
-#endif /* MAC_802_15_4_WB */
 #ifdef THREAD_WB
   else if (HW_IPCC_RX_PENDING( HW_IPCC_THREAD_NOTIFICATION_ACK_CHANNEL ))
   {
@@ -114,16 +98,6 @@ void HW_IPCC_Rx_Handler( void )
     HW_IPCC_LLD_BLE_ReceiveM0CmdHandler();
   }
 #endif /* LLD_TESTS_WB */
-#ifdef ZIGBEE_WB
-  else if (HW_IPCC_RX_PENDING( HW_IPCC_ZIGBEE_APPLI_NOTIF_ACK_CHANNEL ))
-  {
-    HW_IPCC_ZIGBEE_StackNotifEvtHandler();
-  }
-  else if (HW_IPCC_RX_PENDING( HW_IPCC_ZIGBEE_M0_REQUEST_CHANNEL ))
-  {
-    HW_IPCC_ZIGBEE_StackM0RequestHandler();
-  }
-#endif /* ZIGBEE_WB */
   else if (HW_IPCC_RX_PENDING( HW_IPCC_BLE_EVENT_CHANNEL ))
   {
     HW_IPCC_BLE_EvtHandler();
@@ -132,22 +106,14 @@ void HW_IPCC_Rx_Handler( void )
   {
     HW_IPCC_TRACES_EvtHandler();
   }
-
-  return;
 }
 
-void HW_IPCC_Tx_Handler( void )
+void IPCC_C1_TX_IRQHandler(void)
 {
   if (HW_IPCC_TX_PENDING( HW_IPCC_SYSTEM_CMD_RSP_CHANNEL ))
   {
     HW_IPCC_SYS_CmdEvtHandler();
   }
-#ifdef MAC_802_15_4_WB
-  else if (HW_IPCC_TX_PENDING( HW_IPCC_MAC_802_15_4_CMD_RSP_CHANNEL ))
-  {
-    HW_IPCC_MAC_802_15_4_CmdEvtHandler();
-  }
-#endif /* MAC_802_15_4_WB */
 #ifdef THREAD_WB
   else if (HW_IPCC_TX_PENDING( HW_IPCC_THREAD_OT_CMD_RSP_CHANNEL ))
   {
@@ -157,12 +123,6 @@ void HW_IPCC_Tx_Handler( void )
 #ifdef LLD_TESTS_WB
 // No TX handler for LLD tests
 #endif /* LLD_TESTS_WB */
-#ifdef ZIGBEE_WB
-  if (HW_IPCC_TX_PENDING( HW_IPCC_ZIGBEE_CMD_APPLI_CHANNEL ))
-  {
-      HW_IPCC_ZIGBEE_CmdEvtHandler();
-  }
-#endif /* ZIGBEE_WB */
   else if (HW_IPCC_TX_PENDING( HW_IPCC_MM_RELEASE_BUFFER_CHANNEL ))
   {
     HW_IPCC_MM_FreeBufHandler();
@@ -171,8 +131,6 @@ void HW_IPCC_Tx_Handler( void )
   {
     HW_IPCC_BLE_AclDataEvtHandler();
   }
-
-  return;
 }
 /******************************************************************************
  * GENERAL
@@ -266,6 +224,8 @@ static void HW_IPCC_BLE_AclDataEvtHandler( void )
 
 __weak void HW_IPCC_BLE_AclDataAckNot( void ){};
 __weak void HW_IPCC_BLE_RxEvtNot( void ){};
+__WEAK void HW_IPCC_BLE_AclDataAckNot( void ){};
+__WEAK void HW_IPCC_BLE_RxEvtNot( void ){};
 
 /******************************************************************************
  * SYSTEM
@@ -303,57 +263,11 @@ static void HW_IPCC_SYS_EvtHandler( void )
   return;
 }
 
-__weak void HW_IPCC_SYS_CmdEvtNot( void ){};
-__weak void HW_IPCC_SYS_EvtNot( void ){};
-
 /******************************************************************************
  * MAC 802.15.4
  ******************************************************************************/
-#ifdef MAC_802_15_4_WB
-void HW_IPCC_MAC_802_15_4_Init( void )
-{
-  LL_C1_IPCC_EnableReceiveChannel( IPCC, HW_IPCC_MAC_802_15_4_NOTIFICATION_ACK_CHANNEL );
-
-  return;
-}
-
-void HW_IPCC_MAC_802_15_4_SendCmd( void )
-{
-  LL_C1_IPCC_SetFlag_CHx( IPCC, HW_IPCC_MAC_802_15_4_CMD_RSP_CHANNEL );
-  LL_C1_IPCC_EnableTransmitChannel( IPCC, HW_IPCC_MAC_802_15_4_CMD_RSP_CHANNEL );
-
-  return;
-}
-
-void HW_IPCC_MAC_802_15_4_SendAck( void )
-{
-  LL_C1_IPCC_ClearFlag_CHx( IPCC, HW_IPCC_MAC_802_15_4_NOTIFICATION_ACK_CHANNEL );
-  LL_C1_IPCC_EnableReceiveChannel( IPCC, HW_IPCC_MAC_802_15_4_NOTIFICATION_ACK_CHANNEL );
-
-  return;
-}
-
-static void HW_IPCC_MAC_802_15_4_CmdEvtHandler( void )
-{
-  LL_C1_IPCC_DisableTransmitChannel( IPCC, HW_IPCC_MAC_802_15_4_CMD_RSP_CHANNEL );
-
-  HW_IPCC_MAC_802_15_4_CmdEvtNot();
-
-  return;
-}
-
-static void HW_IPCC_MAC_802_15_4_NotEvtHandler( void )
-{
-  LL_C1_IPCC_DisableReceiveChannel( IPCC, HW_IPCC_MAC_802_15_4_NOTIFICATION_ACK_CHANNEL );
-
-  HW_IPCC_MAC_802_15_4_EvtNot();
-
-  return;
-}
-__weak void HW_IPCC_MAC_802_15_4_CmdEvtNot( void ){};
-__weak void HW_IPCC_MAC_802_15_4_EvtNot( void ){};
-#endif
-
+__WEAK void HW_IPCC_SYS_CmdEvtNot( void ){};
+__WEAK void HW_IPCC_SYS_EvtNot( void ){};
 /******************************************************************************
  * THREAD
  ******************************************************************************/
@@ -424,9 +338,9 @@ static void HW_IPCC_THREAD_CliNotEvtHandler( void )
   return;
 }
 
-__weak void HW_IPCC_OT_CmdEvtNot( void ){};
-__weak void HW_IPCC_CLI_CmdEvtNot( void ){};
-__weak void HW_IPCC_THREAD_EvtNot( void ){};
+__WEAK void HW_IPCC_OT_CmdEvtNot( void ){};
+__WEAK void HW_IPCC_CLI_CmdEvtNot( void ){};
+__WEAK void HW_IPCC_THREAD_EvtNot( void ){};
 
 #endif /* THREAD_WB */
 
@@ -551,23 +465,6 @@ void HW_IPCC_LLD_BLE_SendRspAck( void )
 /******************************************************************************
  * ZIGBEE
  ******************************************************************************/
-#ifdef ZIGBEE_WB
-void HW_IPCC_ZIGBEE_Init( void )
-{
-  LL_C1_IPCC_EnableReceiveChannel( IPCC, HW_IPCC_ZIGBEE_APPLI_NOTIF_ACK_CHANNEL );
-  LL_C1_IPCC_EnableReceiveChannel( IPCC, HW_IPCC_ZIGBEE_M0_REQUEST_CHANNEL );
-
-  return;
-}
-
-void HW_IPCC_ZIGBEE_SendM4RequestToM0( void )
-{
-  LL_C1_IPCC_SetFlag_CHx( IPCC, HW_IPCC_ZIGBEE_CMD_APPLI_CHANNEL );
-  LL_C1_IPCC_EnableTransmitChannel( IPCC, HW_IPCC_ZIGBEE_CMD_APPLI_CHANNEL );
-
-  return;
-}
-
 void HW_IPCC_ZIGBEE_SendM4AckToM0Notify( void )
 {
   LL_C1_IPCC_ClearFlag_CHx( IPCC, HW_IPCC_ZIGBEE_APPLI_NOTIF_ACK_CHANNEL );
@@ -575,47 +472,6 @@ void HW_IPCC_ZIGBEE_SendM4AckToM0Notify( void )
 
   return;
 }
-
-static void HW_IPCC_ZIGBEE_CmdEvtHandler( void )
-{
-  LL_C1_IPCC_DisableTransmitChannel( IPCC, HW_IPCC_ZIGBEE_CMD_APPLI_CHANNEL );
-
-  HW_IPCC_ZIGBEE_RecvAppliAckFromM0();
-
-  return;
-}
-
-static void HW_IPCC_ZIGBEE_StackNotifEvtHandler( void )
-{
-  LL_C1_IPCC_DisableReceiveChannel( IPCC, HW_IPCC_ZIGBEE_APPLI_NOTIF_ACK_CHANNEL );
-
-  HW_IPCC_ZIGBEE_RecvM0NotifyToM4();
-
-  return;
-}
-
-static void HW_IPCC_ZIGBEE_StackM0RequestHandler( void )
-{
-  LL_C1_IPCC_DisableReceiveChannel( IPCC, HW_IPCC_ZIGBEE_M0_REQUEST_CHANNEL );
-
-  HW_IPCC_ZIGBEE_RecvM0RequestToM4();
-
-  return;
-}
-
-void HW_IPCC_ZIGBEE_SendM4AckToM0Request( void )
-{
-  LL_C1_IPCC_ClearFlag_CHx( IPCC, HW_IPCC_ZIGBEE_M0_REQUEST_CHANNEL );
-  LL_C1_IPCC_EnableReceiveChannel( IPCC, HW_IPCC_ZIGBEE_M0_REQUEST_CHANNEL );
-
-  return;
-}
-
-__weak void HW_IPCC_ZIGBEE_RecvAppliAckFromM0( void ){};
-__weak void HW_IPCC_ZIGBEE_RecvM0NotifyToM4( void ){};
-__weak void HW_IPCC_ZIGBEE_RecvM0RequestToM4( void ){};
-#endif /* ZIGBEE_WB */
-
 /******************************************************************************
  * MEMORY MANAGER
  ******************************************************************************/
@@ -667,3 +523,5 @@ static void HW_IPCC_TRACES_EvtHandler( void )
 }
 
 __weak void HW_IPCC_TRACES_EvtNot( void ){};
+__WEAK void HW_IPCC_TRACES_EvtNot( void ){};
+#endif /* STM32WBxx */
diff --git a/src/utility/STM32Cube_FW/mbox_def.h b/src/utility/STM32Cube_FW/mbox_def.h
index 68b71f9..70f8e97 100644
--- a/src/utility/STM32Cube_FW/mbox_def.h
+++ b/src/utility/STM32Cube_FW/mbox_def.h
@@ -105,13 +105,6 @@ extern "C" {
     uint8_t   *cmdrsp_buffer;
     uint8_t   *m0cmd_buffer;
   } MB_BleLldTable_t;
-
-  typedef struct
-  {
-    uint8_t   *notifM0toM4_buffer;
-    uint8_t   *appliCmdM4toM0_buffer;
-    uint8_t   *requestM0toM4_buffer;
-  } MB_ZigbeeTable_t;
   /**
    * msg
    * [0:7]   = cmd/evt
@@ -139,13 +132,6 @@ extern "C" {
     uint8_t   *traces_queue;
   } MB_TracesTable_t;
 
-  typedef struct
-  {
-    uint8_t   *p_cmdrsp_buffer;
-    uint8_t   *p_notack_buffer;
-    uint8_t   *evt_queue;
-  } MB_Mac_802_15_4_t;
-
   typedef struct
   {
     MB_DeviceInfoTable_t    *p_device_info_table;
@@ -154,8 +140,6 @@ extern "C" {
     MB_SysTable_t           *p_sys_table;
     MB_MemManagerTable_t    *p_mem_manager_table;
     MB_TracesTable_t        *p_traces_table;
-    MB_Mac_802_15_4_t       *p_mac_802_15_4_table;
-    MB_ZigbeeTable_t        *p_zigbee_table;
     MB_LldTestsTable_t      *p_lld_tests_table;
     MB_BleLldTable_t        *p_ble_lld_table;
 } MB_RefTable_t;
@@ -199,15 +183,6 @@ typedef struct
  *   |                                                 |
  *   |<---HW_IPCC_SYSTEM_EVENT_CHANNEL-----------------|
  *   |                                                 |
- *   |            (ZIGBEE)                             |
- *   |----HW_IPCC_ZIGBEE_CMD_APPLI_CHANNEL------------>|
- *   |                                                 |
- *   |----HW_IPCC_ZIGBEE_CMD_CLI_CHANNEL-------------->|
- *   |                                                 |
- *   |<---HW_IPCC_ZIGBEE_APPLI_NOTIF_ACK_CHANNEL-------|
- *   |                                                 |
- *   |<---HW_IPCC_ZIGBEE_CLI_NOTIF_ACK_CHANNEL---------|
- *   |                                                 |
  *   |             (THREAD)                            |
  *   |----HW_IPCC_THREAD_OT_CMD_RSP_CHANNEL----------->|
  *   |                                                 |
@@ -231,11 +206,6 @@ typedef struct
  *   |                                                 |
  *   |<---HW_IPCC_BLE_LLD_M0_CMD_CHANNEL---------------|
  *   |                                                 |
- *   |             (MAC)                               |
- *   |----HW_IPCC_MAC_802_15_4_CMD_RSP_CHANNEL-------->|
- *   |                                                 |
- *   |<---HW_IPCC_MAC_802_15_4_NOTIFICATION_ACK_CHANNEL|
- *   |                                                 |
  *   |             (BUFFER)                            |
  *   |----HW_IPCC_MM_RELEASE_BUFFER_CHANNE------------>|
  *   |                                                 |
@@ -253,8 +223,6 @@ typedef struct
 #define HW_IPCC_BLE_CMD_CHANNEL                         LL_IPCC_CHANNEL_1
 #define HW_IPCC_SYSTEM_CMD_RSP_CHANNEL                  LL_IPCC_CHANNEL_2
 #define HW_IPCC_THREAD_OT_CMD_RSP_CHANNEL               LL_IPCC_CHANNEL_3
-#define HW_IPCC_ZIGBEE_CMD_APPLI_CHANNEL                LL_IPCC_CHANNEL_3
-#define HW_IPCC_MAC_802_15_4_CMD_RSP_CHANNEL            LL_IPCC_CHANNEL_3
 #define HW_IPCC_MM_RELEASE_BUFFER_CHANNEL               LL_IPCC_CHANNEL_4
 #define HW_IPCC_THREAD_CLI_CMD_CHANNEL                  LL_IPCC_CHANNEL_5
 #define HW_IPCC_LLDTESTS_CLI_CMD_CHANNEL                LL_IPCC_CHANNEL_5
@@ -266,8 +234,6 @@ typedef struct
 #define HW_IPCC_BLE_EVENT_CHANNEL                       LL_IPCC_CHANNEL_1
 #define HW_IPCC_SYSTEM_EVENT_CHANNEL                    LL_IPCC_CHANNEL_2
 #define HW_IPCC_THREAD_NOTIFICATION_ACK_CHANNEL         LL_IPCC_CHANNEL_3
-#define HW_IPCC_ZIGBEE_APPLI_NOTIF_ACK_CHANNEL          LL_IPCC_CHANNEL_3
-#define HW_IPCC_MAC_802_15_4_NOTIFICATION_ACK_CHANNEL   LL_IPCC_CHANNEL_3
 #define HW_IPCC_LLDTESTS_M0_CMD_CHANNEL                 LL_IPCC_CHANNEL_3
 #define HW_IPCC_BLE_LLD_M0_CMD_CHANNEL                  LL_IPCC_CHANNEL_3
 #define HW_IPCC_TRACES_CHANNEL                          LL_IPCC_CHANNEL_4
diff --git a/src/utility/STM32Cube_FW/shci.c b/src/utility/STM32Cube_FW/shci.c
index 472a108..586931f 100644
--- a/src/utility/STM32Cube_FW/shci.c
+++ b/src/utility/STM32Cube_FW/shci.c
@@ -15,8 +15,7 @@
  *
  ******************************************************************************
  */
-
-
+#if defined(STM32WBxx)
 /* Includes ------------------------------------------------------------------*/
 #include "stm32_wpan_common.h"
 
@@ -352,24 +351,6 @@ SHCI_CmdStatus_t SHCI_C2_BLE_LLD_Init( uint8_t param_size, uint8_t * p_param )
   return (SHCI_CmdStatus_t)(((TL_CcEvt_t*)(p_rsp->evtserial.evt.payload))->payload[0]);
 }
 
-SHCI_CmdStatus_t SHCI_C2_ZIGBEE_Init( void )
-{
-  /**
-   * Buffer is large enough to hold command complete without payload
-   */
-  uint8_t local_buffer[TL_BLEEVT_CS_BUFFER_SIZE];
-  TL_EvtPacket_t * p_rsp;
-
-  p_rsp = (TL_EvtPacket_t *)local_buffer;
-
-  shci_send( SHCI_OPCODE_C2_ZIGBEE_INIT,
-             0,
-             0,
-             p_rsp );
-
-  return (SHCI_CmdStatus_t)(((TL_CcEvt_t*)(p_rsp->evtserial.evt.payload))->payload[0]);
-}
-
 SHCI_CmdStatus_t SHCI_C2_DEBUG_Init( SHCI_C2_DEBUG_Init_Cmd_Packet_t *pCmdPacket  )
 {
   /**
@@ -527,24 +508,6 @@ SHCI_CmdStatus_t SHCI_C2_RADIO_AllowLowPower( SHCI_C2_FLASH_Ip_t Ip,uint8_t  Fla
   return (SHCI_CmdStatus_t)(((TL_CcEvt_t*)(p_rsp->evtserial.evt.payload))->payload[0]);
 }
 
-SHCI_CmdStatus_t SHCI_C2_MAC_802_15_4_Init( void )
-{
-  /**
-   * Buffer is large enough to hold command complete without payload
-   */
-  uint8_t local_buffer[TL_BLEEVT_CS_BUFFER_SIZE];
-  TL_EvtPacket_t * p_rsp;
-
-  p_rsp = (TL_EvtPacket_t *)local_buffer;
-
-  shci_send( SHCI_OPCODE_C2_MAC_802_15_4_INIT,
-             0,
-             0,
-             p_rsp );
-
-  return (SHCI_CmdStatus_t)(((TL_CcEvt_t*)(p_rsp->evtserial.evt.payload))->payload[0]);
-}
-
 SHCI_CmdStatus_t SHCI_C2_Reinit( void )
 {
   /**
diff --git a/src/utility/STM32Cube_FW/shci.h b/src/utility/STM32Cube_FW/shci.h
index 102089e..2f03114 100644
--- a/src/utility/STM32Cube_FW/shci.h
+++ b/src/utility/STM32Cube_FW/shci.h
@@ -49,7 +49,6 @@ extern "C" {
      ERR_BLE_INIT = 0,                 /* This event is currently not reported by the CPU2                    */
      ERR_THREAD_LLD_FATAL_ERROR = 125, /* The LLD driver used on 802_15_4 detected a fatal error              */
      ERR_THREAD_UNKNOWN_CMD = 126,     /* The command send by the CPU1 to control the Thread stack is unknown */
-     ERR_ZIGBEE_UNKNOWN_CMD = 200,     /* The command send by the CPU1 to control the Zigbee stack is unknown */
    } SCHI_SystemErrCode_t;
 
 #define SHCI_EVTCODE                    ( 0xFF )
@@ -102,7 +101,7 @@ extern "C" {
 
   /**
    * SHCI_SUB_EVT_THREAD_NVM_RAM_UPDATE
-   * This notifies the CPU1 which part of the OT NVM RAM has been updated so that only the modified
+   * This notifies the CPU1 which part of the 'OT NVM RAM' has been updated so that only the modified
    * section could be written in Flash/NVM
    * StartAddress : Start address of the section that has been modified
    * Size : Size (in bytes) of the section that has been modified
@@ -216,9 +215,7 @@ extern "C" {
     SHCI_OCF_C2_FLASH_STORE_DATA,
     SHCI_OCF_C2_FLASH_ERASE_DATA,
     SHCI_OCF_C2_RADIO_ALLOW_LOW_POWER,
-    SHCI_OCF_C2_MAC_802_15_4_INIT,
     SHCI_OCF_C2_REINIT,
-    SHCI_OCF_C2_ZIGBEE_INIT,
     SHCI_OCF_C2_LLD_TESTS_INIT,
     SHCI_OCF_C2_EXTPA_CONFIG,
     SHCI_OCF_C2_SET_FLASH_ACTIVITY_CONTROL,
@@ -436,7 +433,7 @@ extern "C" {
    * PrWriteListSize
    * NOTE: This parameter is ignored by the CPU2 when the parameter "Options" is set to "LL_only" ( see Options description in that structure )
    *
-   * Maximum number of supported \93prepare write request\94
+   * Maximum number of supported \93prepare write request\94
    *    - Min value: given by the macro DEFAULT_PREP_WRITE_LIST_SIZE
    *    - Max value: a value higher than the minimum required can be specified, but it is not recommended
    */
@@ -502,7 +499,7 @@ extern "C" {
    * MaxConnEventLength
    * This parameter determines the maximum duration of a slave connection event. When this duration is reached the slave closes
    * the current connections event (whatever is the CE_length parameter specified by the master in HCI_CREATE_CONNECTION HCI command),
-   * expressed in units of 625/256 \B5s (~2.44 \B5s)
+   * expressed in units of 625/256 \B5s (~2.44 \B5s)
    *    - Min value: 0 (if 0 is specified, the master and slave perform only a single TX-RX exchange per connection event)
    *    - Max value: 1638400 (4000 ms). A higher value can be specified (max 0xFFFFFFFF) but results in a maximum connection time
    *      of 4000 ms as specified. In this case the parameter is not applied, and the predicted CE length calculated on slave is not shortened
@@ -511,7 +508,7 @@ extern "C" {
 
   /**
    * HsStartupTime
-   * Startup time of the high speed (16 or 32 MHz) crystal oscillator in units of 625/256 \B5s (~2.44 \B5s).
+   * Startup time of the high speed (16 or 32 MHz) crystal oscillator in units of 625/256 \B5s (~2.44 \B5s).
    *    - Min value: 0
    *    - Max value:  820 (~2 ms). A higher value can be specified, but the value that implemented in stack is forced to ~2 ms
    */
@@ -648,8 +645,6 @@ extern "C" {
     {
       uint8_t thread_config;
       uint8_t ble_config;
-      uint8_t mac_802_15_4_config;
-      uint8_t zigbee_config;
     } SHCI_C2_DEBUG_TracesConfig_t;
 
     typedef PACKED_STRUCT
@@ -713,8 +708,6 @@ extern "C" {
     {
       BLE_ENABLE,
       THREAD_ENABLE,
-      ZIGBEE_ENABLE,
-      MAC_ENABLE,
     } SHCI_C2_CONCURRENT_Mode_Param_t;
       /** No response parameters*/
 
@@ -737,18 +730,13 @@ extern "C" {
     {
       BLE_IP,
       THREAD_IP,
-      ZIGBEE_IP,
     } SHCI_C2_FLASH_Ip_t;
       /** No response parameters*/
 
 #define SHCI_OPCODE_C2_RADIO_ALLOW_LOW_POWER    (( SHCI_OGF << 10) + SHCI_OCF_C2_RADIO_ALLOW_LOW_POWER)
 
-#define SHCI_OPCODE_C2_MAC_802_15_4_INIT        (( SHCI_OGF << 10) + SHCI_OCF_C2_MAC_802_15_4_INIT)
-
 #define SHCI_OPCODE_C2_REINIT                   (( SHCI_OGF << 10) + SHCI_OCF_C2_REINIT)
 
-#define SHCI_OPCODE_C2_ZIGBEE_INIT              (( SHCI_OGF << 10) + SHCI_OCF_C2_ZIGBEE_INIT)
-
 #define SHCI_OPCODE_C2_LLD_TESTS_INIT           (( SHCI_OGF << 10) + SHCI_OCF_C2_LLD_TESTS_INIT)
 
 #define SHCI_OPCODE_C2_BLE_LLD_INIT             (( SHCI_OGF << 10) + SHCI_OCF_C2_BLE_LLD_INIT)
@@ -856,7 +844,7 @@ extern "C" {
 #define FUS_DEVICE_INFO_TABLE_VALIDITY_KEYWORD    (0xA94656B9)
 
 /*
-  *   At startup, the informations relative to the wireless binary are stored in RAM trough a structure defined by
+  *   At startup, the information relative to the wireless binary are stored in RAM through a structure defined by
   *   MB_WirelessFwInfoTable_t.This structure contains 4 fields (Version,MemorySize, Stack_info and a reserved part)
   *   each of those coded on 32 bits as shown on the table below:
   *
@@ -912,9 +900,6 @@ extern "C" {
 #define INFO_STACK_TYPE_BLE_HCI_EXT_ADV             0x07
 #define INFO_STACK_TYPE_THREAD_FTD                  0x10
 #define INFO_STACK_TYPE_THREAD_MTD                  0x11
-#define INFO_STACK_TYPE_ZIGBEE_FFD                  0x30
-#define INFO_STACK_TYPE_ZIGBEE_RFD                  0x31
-#define INFO_STACK_TYPE_MAC                         0x40
 #define INFO_STACK_TYPE_BLE_THREAD_FTD_STATIC       0x50
 #define INFO_STACK_TYPE_BLE_THREAD_FTD_DYAMIC       0x51
 #define INFO_STACK_TYPE_802154_LLD_TESTS            0x60
@@ -923,12 +908,7 @@ extern "C" {
 #define INFO_STACK_TYPE_BLE_LLD_TESTS               0x63
 #define INFO_STACK_TYPE_BLE_RLV                     0x64
 #define INFO_STACK_TYPE_802154_RLV                  0x65
-#define INFO_STACK_TYPE_BLE_ZIGBEE_FFD_STATIC       0x70
-#define INFO_STACK_TYPE_BLE_ZIGBEE_RFD_STATIC       0x71
-#define INFO_STACK_TYPE_BLE_ZIGBEE_FFD_DYNAMIC      0x78
-#define INFO_STACK_TYPE_BLE_ZIGBEE_RFD_DYNAMIC      0x79
 #define INFO_STACK_TYPE_RLV                         0x80
-#define INFO_STACK_TYPE_BLE_MAC_STATIC              0x90
 
 typedef struct {
 /**
@@ -1102,7 +1082,7 @@ typedef struct {
   * @brief Starts the LLD tests CLI
   *
   * @param  param_size : Nb of bytes
-  * @param  p_param : pointeur with data to give from M4 to M0
+  * @param  p_param : pointer with data to give from M4 to M0
   * @retval Status
   */
   SHCI_CmdStatus_t SHCI_C2_LLDTESTS_Init( uint8_t param_size, uint8_t * p_param );
@@ -1112,20 +1092,11 @@ typedef struct {
   * @brief Starts the LLD tests BLE
   *
   * @param  param_size : Nb of bytes
-  * @param  p_param : pointeur with data to give from M4 to M0
+  * @param  p_param : pointer with data to give from M4 to M0
   * @retval Status
   */
   SHCI_CmdStatus_t SHCI_C2_BLE_LLD_Init( uint8_t param_size, uint8_t * p_param );
   
-    /**
-  * SHCI_C2_ZIGBEE_Init
-  * @brief Starts the Zigbee Stack
-  *
-  * @param  None
-  * @retval Status
-  */
-  SHCI_CmdStatus_t SHCI_C2_ZIGBEE_Init( void );
-
   /**
   * SHCI_C2_DEBUG_Init
   * @brief Starts the Traces
@@ -1200,16 +1171,6 @@ typedef struct {
   */
   SHCI_CmdStatus_t SHCI_C2_RADIO_AllowLowPower( SHCI_C2_FLASH_Ip_t Ip,uint8_t  FlagRadioLowPowerOn);
 
-
-  /**
-  * SHCI_C2_MAC_802_15_4_Init
-  * @brief Starts the MAC 802.15.4 on M0
-  *
-  * @param  None
-  * @retval Status
-  */
-  SHCI_CmdStatus_t SHCI_C2_MAC_802_15_4_Init( void );
-
   /**
    * SHCI_GetWirelessFwInfo
    * @brief This function read back the informations relative to the wireless binary loaded.
diff --git a/src/utility/STM32Cube_FW/shci_tl.c b/src/utility/STM32Cube_FW/shci_tl.c
index ddb3a02..fc398ae 100644
--- a/src/utility/STM32Cube_FW/shci_tl.c
+++ b/src/utility/STM32Cube_FW/shci_tl.c
@@ -15,13 +15,13 @@
  *
  ******************************************************************************
  */
-
-
+#if defined(STM32WBxx)
 /* Includes ------------------------------------------------------------------*/
 #include "stm32_wpan_common.h"
 
 #include "stm_list.h"
 #include "shci_tl.h"
+#include "stm32_def.h"
 
 /* Private typedef -----------------------------------------------------------*/
 typedef enum
@@ -168,6 +168,20 @@ void shci_send( uint16_t cmd_code, uint8_t len_cmd_payload, uint8_t * p_cmd_payl
   return;
 }
 
+void shci_notify_asynch_evt(void *pdata)
+{
+  UNUSED(pdata);
+  /* Need to parse data in future version */
+  shci_user_evt_proc();
+}
+
+void shci_register_io_bus(tSHciIO *fops)
+{
+  /* Register IO bus services */
+  fops->Init    = TL_SYS_Init;
+  fops->Send    = TL_SYS_SendCmd;
+}
+
 /* Private functions ---------------------------------------------------------*/
 static void TlInit( TL_CmdPacket_t * p_cmdbuffer )
 {
@@ -251,5 +265,5 @@ __WEAK void shci_cmd_resp_release(uint32_t flag)
 
   return;
 }
-
+#endif /* STM32WBxx */
 
diff --git a/src/utility/STM32Cube_FW/stm32_wpan_common.h b/src/utility/STM32Cube_FW/stm32_wpan_common.h
index b47b804..2e4d58e 100644
--- a/src/utility/STM32Cube_FW/stm32_wpan_common.h
+++ b/src/utility/STM32Cube_FW/stm32_wpan_common.h
@@ -38,6 +38,9 @@ extern "C" {
  #define __INLINE         inline                                     /*!< inline keyword for GNU Compiler       */
  #define __STATIC_INLINE  static inline
 #endif
+#define __ASM            __asm                                      /*!< asm keyword for GNU Compiler          */
+#define __INLINE         inline                                     /*!< inline keyword for GNU Compiler       */
+#define __STATIC_INLINE  static inline
 
 #include <stdint.h>
 #include <string.h>
@@ -140,29 +143,9 @@ extern "C" {
 /* ----------------------------------- *
  *  Packed usage (compiler dependent)  *
  * ----------------------------------- */
-#undef PACKED__
 #undef PACKED_STRUCT
-
 #if defined ( __CC_ARM )
-  #if defined ( __GNUC__ )
-    /* GNU extension */
-    #define PACKED__ __attribute__((packed))
-    #define PACKED_STRUCT struct PACKED__
-  #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050U)
-    #define PACKED__ __attribute__((packed))
-    #define PACKED_STRUCT struct PACKED__
-  #else
-    #define PACKED__(TYPE) __packed TYPE
-    #define PACKED_STRUCT PACKED__(struct)
-  #endif
-#elif defined   ( __GNUC__ )
-  #define PACKED__ __attribute__((packed))
-  #define PACKED_STRUCT struct PACKED__
-#elif defined (__ICCARM__)
-  #define PACKED_STRUCT __packed struct
-#else
-  #define PACKED_STRUCT __packed struct
-#endif
+#define PACKED_STRUCT struct __packed
 
 #ifdef __cplusplus
 }
diff --git a/src/utility/STM32Cube_FW/stm_list.c b/src/utility/STM32Cube_FW/stm_list.c
index 4c92864..51a51da 100644
--- a/src/utility/STM32Cube_FW/stm_list.c
+++ b/src/utility/STM32Cube_FW/stm_list.c
@@ -16,14 +16,14 @@
   ******************************************************************************
   */
 
-
+#if defined(STM32WBxx)
 /******************************************************************************
  * Include Files
  ******************************************************************************/
 #include "utilities_common.h"
-
 #include "stm_list.h"
-
+#include "cmsis_gcc.h"
+#include "stm32_wpan_common.h"
 /******************************************************************************
  * Function Definitions
  ******************************************************************************/
@@ -33,10 +33,10 @@ void LST_init_head (tListNode * listHead)
   listHead->prev = listHead;
 }
 
-uint8_t LST_is_empty (tListNode * listHead)
+bool LST_is_empty (tListNode * listHead)
 {
   uint32_t primask_bit;
-  uint8_t return_value;
+  bool return_value;
 
   primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
   __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/
@@ -204,3 +204,4 @@ void LST_get_prev_node (tListNode * ref_node, tListNode ** node)
 
   __set_PRIMASK(primask_bit);      /**< Restore PRIMASK bit*/
 }
+#endif /* STM32WBxx */
diff --git a/src/utility/STM32Cube_FW/stm_list.h b/src/utility/STM32Cube_FW/stm_list.h
index b7c3254..769c211 100644
--- a/src/utility/STM32Cube_FW/stm_list.h
+++ b/src/utility/STM32Cube_FW/stm_list.h
@@ -21,6 +21,8 @@
 #define _STM_LIST_H_
 
 /* Includes ------------------------------------------------------------------*/
+#include "stdint.h"
+#include "stdbool.h"
 #include "stm32_wpan_common.h"
 
 typedef PACKED_STRUCT _tListNode {
@@ -30,7 +32,7 @@ typedef PACKED_STRUCT _tListNode {
 
 void LST_init_head (tListNode * listHead);
 
-uint8_t LST_is_empty (tListNode * listHead);
+bool LST_is_empty (tListNode * listHead);
 
 void LST_insert_head (tListNode * listHead, tListNode * node);
 
diff --git a/src/utility/STM32Cube_FW/tl.h b/src/utility/STM32Cube_FW/tl.h
index 2124d26..678769c 100644
--- a/src/utility/STM32Cube_FW/tl.h
+++ b/src/utility/STM32Cube_FW/tl.h
@@ -199,19 +199,6 @@ typedef struct
   uint8_t *p_BleLldM0CmdBuffer;
 } TL_BLE_LLD_Config_t;
 
-typedef struct
-{
-  uint8_t *p_Mac_802_15_4_CmdRspBuffer;
-  uint8_t *p_Mac_802_15_4_NotAckBuffer;
-} TL_MAC_802_15_4_Config_t;
-
-typedef struct
-{
-  uint8_t *p_ZigbeeOtCmdRspBuffer;
-  uint8_t *p_ZigbeeNotAckBuffer;
-  uint8_t *p_ZigbeeNotifRequestBuffer;
-} TL_ZIGBEE_Config_t;
-
 /**
  * @brief Contain the BLE HCI Init Configuration
  * @{
@@ -305,26 +292,6 @@ void TL_MM_EvtDone( TL_EvtPacket_t * hcievt );
 void TL_TRACES_Init( void );
 void TL_TRACES_EvtReceived( TL_EvtPacket_t * hcievt );
 
-/******************************************************************************
- * MAC 802.15.4
- ******************************************************************************/
-void TL_MAC_802_15_4_Init( TL_MAC_802_15_4_Config_t *p_Config );
-void TL_MAC_802_15_4_SendCmd( void );
-void TL_MAC_802_15_4_CmdEvtReceived( TL_EvtPacket_t * Otbuffer );
-void TL_MAC_802_15_4_NotReceived( TL_EvtPacket_t * Notbuffer );
-void TL_MAC_802_15_4_SendAck ( void );
-
-/******************************************************************************
- * ZIGBEE
- ******************************************************************************/
-void TL_ZIGBEE_Init( TL_ZIGBEE_Config_t *p_Config );
-void TL_ZIGBEE_SendM4RequestToM0( void );
-void TL_ZIGBEE_SendM4AckToM0Notify ( void );
-void TL_ZIGBEE_NotReceived( TL_EvtPacket_t * Notbuffer );
-void TL_ZIGBEE_CmdEvtReceived( TL_EvtPacket_t * Otbuffer );
-void TL_ZIGBEE_M0RequestReceived(TL_EvtPacket_t * Otbuffer );
-void TL_ZIGBEE_SendM4AckToM0Request(void);
-
 #ifdef __cplusplus
 } /* extern "C" */
 #endif
diff --git a/src/utility/STM32Cube_FW/tl_mbox.c b/src/utility/STM32Cube_FW/tl_mbox.c
index 4112429..4569df4 100644
--- a/src/utility/STM32Cube_FW/tl_mbox.c
+++ b/src/utility/STM32Cube_FW/tl_mbox.c
@@ -16,6 +16,7 @@
  ******************************************************************************
  */
 
+#if defined(STM32WBxx)
 /* Includes ------------------------------------------------------------------*/
 #include "stm32_wpan_common.h"
 #include "hw.h"
@@ -51,15 +52,13 @@ PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static MB_BleLldTable_t TL_BleLldTable;
 PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static MB_SysTable_t TL_SysTable;
 PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static MB_MemManagerTable_t TL_MemManagerTable;
 PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static MB_TracesTable_t TL_TracesTable;
-PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static MB_Mac_802_15_4_t TL_Mac_802_15_4_Table;
-PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static MB_ZigbeeTable_t TL_Zigbee_Table;
 
 /**< tables */
 PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static tListNode  FreeBufQueue;
 PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static tListNode  TracesEvtQueue;
 PLACE_IN_SECTION("MB_MEM2") ALIGN(4) static uint8_t    CsBuffer[sizeof(TL_PacketHeader_t) + TL_EVT_HDR_SIZE + sizeof(TL_CsEvt_t)];
-PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static tListNode  EvtQueue;
-PLACE_IN_SECTION("MB_MEM1") ALIGN(4) static tListNode  SystemEvtQueue;
+PLACE_IN_SECTION("MB_MEM2") ALIGN(4) static tListNode  EvtQueue;
+PLACE_IN_SECTION("MB_MEM2") ALIGN(4) static tListNode  SystemEvtQueue;
 
 
 static tListNode  LocalFreeBufQueue;
@@ -97,8 +96,6 @@ void TL_Init( void )
   TL_RefTable.p_sys_table = &TL_SysTable;
   TL_RefTable.p_mem_manager_table = &TL_MemManagerTable;
   TL_RefTable.p_traces_table = &TL_TracesTable;
-  TL_RefTable.p_mac_802_15_4_table = &TL_Mac_802_15_4_Table;
-  TL_RefTable.p_zigbee_table = &TL_Zigbee_Table;
   HW_IPCC_Init();
 
   return;
@@ -452,139 +449,6 @@ void TL_BLE_LLD_SendRspAck( void )
 }
 #endif /* BLE_LLD_WB */
 
-#ifdef MAC_802_15_4_WB
-/******************************************************************************
- * MAC 802.15.4
- ******************************************************************************/
-void TL_MAC_802_15_4_Init( TL_MAC_802_15_4_Config_t *p_Config )
-{
-  MB_Mac_802_15_4_t  * p_mac_802_15_4_table;
-
-  p_mac_802_15_4_table = TL_RefTable.p_mac_802_15_4_table;
-
-  p_mac_802_15_4_table->p_cmdrsp_buffer = p_Config->p_Mac_802_15_4_CmdRspBuffer;
-  p_mac_802_15_4_table->p_notack_buffer = p_Config->p_Mac_802_15_4_NotAckBuffer;
-
-  HW_IPCC_MAC_802_15_4_Init();
-
-  return;
-}
-
-void TL_MAC_802_15_4_SendCmd( void )
-{
-  ((TL_CmdPacket_t *)(TL_RefTable.p_mac_802_15_4_table->p_cmdrsp_buffer))->cmdserial.type = TL_OTCMD_PKT_TYPE;
-
-  HW_IPCC_MAC_802_15_4_SendCmd();
-
-  return;
-}
-
-void TL_MAC_802_15_4_SendAck ( void )
-{
-  ((TL_CmdPacket_t *)(TL_RefTable.p_mac_802_15_4_table->p_notack_buffer))->cmdserial.type = TL_OTACK_PKT_TYPE;
-
-  HW_IPCC_MAC_802_15_4_SendAck();
-
-  return;
-}
-
-void HW_IPCC_MAC_802_15_4_CmdEvtNot(void)
-{
-  TL_MAC_802_15_4_CmdEvtReceived( (TL_EvtPacket_t*)(TL_RefTable.p_mac_802_15_4_table->p_cmdrsp_buffer) );
-
-  return;
-}
-
-void HW_IPCC_MAC_802_15_4_EvtNot( void )
-{
-  TL_MAC_802_15_4_NotReceived( (TL_EvtPacket_t*)(TL_RefTable.p_mac_802_15_4_table->p_notack_buffer) );
-
-  return;
-}
-
-__WEAK void TL_MAC_802_15_4_CmdEvtReceived( TL_EvtPacket_t * Otbuffer  ){};
-__WEAK void TL_MAC_802_15_4_NotReceived( TL_EvtPacket_t * Notbuffer ){};
-#endif
-
-#ifdef ZIGBEE_WB
-/******************************************************************************
- * ZIGBEE
- ******************************************************************************/
-void TL_ZIGBEE_Init( TL_ZIGBEE_Config_t *p_Config )
-{
-  MB_ZigbeeTable_t  * p_zigbee_table;
-
-  p_zigbee_table = TL_RefTable.p_zigbee_table;
-  p_zigbee_table->appliCmdM4toM0_buffer = p_Config->p_ZigbeeOtCmdRspBuffer;
-  p_zigbee_table->notifM0toM4_buffer = p_Config->p_ZigbeeNotAckBuffer;
-  p_zigbee_table->requestM0toM4_buffer = p_Config->p_ZigbeeNotifRequestBuffer;
-
-  HW_IPCC_ZIGBEE_Init();
-
-  return;
-}
-
-/* Zigbee M4 to M0 Request */
-void TL_ZIGBEE_SendM4RequestToM0( void )
-{
-  ((TL_CmdPacket_t *)(TL_RefTable.p_zigbee_table->appliCmdM4toM0_buffer))->cmdserial.type = TL_OTCMD_PKT_TYPE;
-
-  HW_IPCC_ZIGBEE_SendM4RequestToM0();
-
-  return;
-}
-
-/* Used to receive an ACK from the M0 */
-void HW_IPCC_ZIGBEE_RecvAppliAckFromM0(void)
-{
-  TL_ZIGBEE_CmdEvtReceived( (TL_EvtPacket_t*)(TL_RefTable.p_zigbee_table->appliCmdM4toM0_buffer) );
-
-  return;
-}
-
-/* Zigbee notification from M0 to M4 */
-void HW_IPCC_ZIGBEE_RecvM0NotifyToM4( void )
-{
-  TL_ZIGBEE_NotReceived( (TL_EvtPacket_t*)(TL_RefTable.p_zigbee_table->notifM0toM4_buffer) );
-
-  return;
-}
-
-/* Send an ACK to the M0 for a Notification */
-void TL_ZIGBEE_SendM4AckToM0Notify ( void )
-{
-  ((TL_CmdPacket_t *)(TL_RefTable.p_zigbee_table->notifM0toM4_buffer))->cmdserial.type = TL_OTACK_PKT_TYPE;
-
-  HW_IPCC_ZIGBEE_SendM4AckToM0Notify();
-
-  return;
-}
-
-/* Zigbee M0 to M4 Request */
-void HW_IPCC_ZIGBEE_RecvM0RequestToM4( void )
-{
-  TL_ZIGBEE_M0RequestReceived( (TL_EvtPacket_t*)(TL_RefTable.p_zigbee_table->requestM0toM4_buffer) );
-
-  return;
-}
-
-/* Send an ACK to the M0 for a Request */
-void TL_ZIGBEE_SendM4AckToM0Request(void)
-{
-  ((TL_CmdPacket_t *)(TL_RefTable.p_zigbee_table->requestM0toM4_buffer))->cmdserial.type = TL_OTACK_PKT_TYPE;
-
-  HW_IPCC_ZIGBEE_SendM4AckToM0Request();
-
-  return;
-}
-
-
-__WEAK void TL_ZIGBEE_CmdEvtReceived( TL_EvtPacket_t * Otbuffer  ){};
-__WEAK void TL_ZIGBEE_NotReceived( TL_EvtPacket_t * Notbuffer ){};
-#endif
-
-
-
 /******************************************************************************
  * MEMORY MANAGER
  ******************************************************************************/
@@ -847,3 +711,4 @@ static void OutputDbgTrace(TL_MB_PacketType_t packet_type, uint8_t* buffer)
   return;
 }
 
+#endif /* STM32WBxx */
-- 
2.25.1

